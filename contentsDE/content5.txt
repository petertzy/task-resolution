<div data-message-author-role="assistant" data-message-id="0d3215ba-5254-4412-8535-2ff968710d88" dir="auto" class="min-h-8 text-message relative flex w-full flex-col items-end gap-2 whitespace-normal break-words text-start [.text-message+&amp;]:mt-5" data-message-model-slug="gpt-4o-mini"><div class="flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class="markdown prose w-full break-words dark:prose-invert light"><h3 data-start="0" data-end="60">PrÃ¤sentation: Wie man eine Web-App in eine PWA umwandelt</h3>
<h4 data-start="62" data-end="124">1. FÃ¼gen Sie das Web-App-Manifest (<code data-start="102" data-end="117">manifest.json</code>) hinzu</h4>
<p data-start="125" data-end="260">Um eine Web-App in eine PWA umzuwandeln, benÃ¶tigen Sie eine <code data-start="185" data-end="200">manifest.json</code>-Datei, die grundlegende Informationen Ã¼ber die App enthÃ¤lt.</p>
<p data-start="262" data-end="312">ðŸ“Œ <strong data-start="265" data-end="310">FÃ¼gen Sie die <code data-start="281" data-end="296">manifest.json</code>-Datei hinzu</strong></p>
<pre class="!overflow-visible" data-start="313" data-end="724"><div class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre language-json"><span><span class="hljs-punctuation">{</span>
  <span class="hljs-attr">"name"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"Meine PWA-App"</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"short_name"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"PWA App"</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"start_url"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"/index.html"</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"display"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"standalone"</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"background_color"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"#ffffff"</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"theme_color"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"#000000"</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">"icons"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">"src"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"icons/icon-192x192.png"</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">"sizes"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"192x192"</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">"type"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"image/png"</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">"src"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"icons/icon-512x512.png"</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">"sizes"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"512x512"</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">"type"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"image/png"</span>
    <span class="hljs-punctuation">}</span>
  <span class="hljs-punctuation">]</span>
<span class="hljs-punctuation">}</span>
</span></code></div></pre>
<p data-start="726" data-end="795">ðŸ“Œ <strong data-start="729" data-end="793">Verweisen Sie auf die <code data-start="753" data-end="768">manifest.json</code>-Datei im HTML-Dokument</strong></p>
<pre class="!overflow-visible" data-start="796" data-end="851"><div class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre language-html"><span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"manifest"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/manifest.json"</span>&gt;</span>
</span></code></div></pre>
<h4 data-start="853" data-end="925">2. Registrieren Sie einen Service Worker fÃ¼r Offline-FunktionalitÃ¤t</h4>
<p data-start="926" data-end="1023">PWAs benÃ¶tigen einen Service Worker, um Ressourcen zu cachen und Offline-UnterstÃ¼tzung zu bieten.</p>
<p data-start="1025" data-end="1077">ðŸ“Œ <strong data-start="1028" data-end="1075">Erstellen Sie die <code data-start="1048" data-end="1067">service-worker.js</code>-Datei</strong></p>
<pre class="!overflow-visible" data-start="1078" data-end="1550"><div class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre language-javascript"><span><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CACHE_NAME</span> = <span class="hljs-string">"pwa-cache-v1"</span>;
<span class="hljs-keyword">const</span> urlsToCache = [
  <span class="hljs-string">"/"</span>,
  <span class="hljs-string">"/index.html"</span>,
  <span class="hljs-string">"/styles.css"</span>,
  <span class="hljs-string">"/app.js"</span>
];

self.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"install"</span>, <span class="hljs-function"><span class="hljs-params">event</span> =&gt;</span> {
  event.<span class="hljs-title function_">waitUntil</span>(
    caches.<span class="hljs-title function_">open</span>(<span class="hljs-variable constant_">CACHE_NAME</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">cache</span> =&gt;</span> {
      <span class="hljs-keyword">return</span> cache.<span class="hljs-title function_">addAll</span>(urlsToCache);
    })
  );
});

self.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"fetch"</span>, <span class="hljs-function"><span class="hljs-params">event</span> =&gt;</span> {
  event.<span class="hljs-title function_">respondWith</span>(
    caches.<span class="hljs-title function_">match</span>(event.<span class="hljs-property">request</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> {
      <span class="hljs-keyword">return</span> response || <span class="hljs-title function_">fetch</span>(event.<span class="hljs-property">request</span>);
    })
  );
});
</span></code></div></pre>
<p data-start="1552" data-end="1641">ðŸ“Œ <strong data-start="1555" data-end="1639">Registrieren Sie den Service Worker in der Hauptdatei (<code data-start="1612" data-end="1622">index.js</code> oder <code data-start="1628" data-end="1636">app.js</code>)</strong></p>
<pre class="!overflow-visible" data-start="1642" data-end="2033"><div class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre language-javascript"><span><span class="hljs-keyword">if</span> (<span class="hljs-string">'serviceWorker'</span> <span class="hljs-keyword">in</span> navigator) {
  <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">'load'</span>, <span class="hljs-function">() =&gt;</span> {
    navigator.<span class="hljs-property">serviceWorker</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">'/service-worker.js'</span>)
      .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">registration</span> =&gt;</span> {
        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Service Worker Registrierung erfolgreich:"</span>, registration);
      })
      .<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> {
        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Service Worker Registrierung fehlgeschlagen:"</span>, error);
      });
  });
}
</span></code></div></pre>
<h4 data-start="2035" data-end="2093">3. Stellen Sie sicher, dass die App HTTPS unterstÃ¼tzt</h4>
<p data-start="2094" data-end="2335">ðŸ“Œ <strong data-start="2097" data-end="2130">Warum ist HTTPS erforderlich?</strong>
PWAs benÃ¶tigen eine sichere Umgebung (HTTPS), um den Service Worker zu aktivieren. FÃ¼r die lokale Entwicklung kÃ¶nnen Sie <code data-start="2252" data-end="2263">localhost</code> verwenden, aber die Live-Version muss Ã¼ber HTTPS bereitgestellt werden.</p>
<p data-start="2337" data-end="2472">FÃ¼r die Bereitstellung kÃ¶nnen Sie Plattformen wie Cloudflare, Netlify, Vercel oder GitHub Pages verwenden, die alle HTTPS unterstÃ¼tzen.</p>
<h4 data-start="2474" data-end="2542">4. FÃ¼gen Sie den "Zum Home-Bildschirm hinzufÃ¼gen"-Hinweis hinzu</h4>
<p data-start="2543" data-end="2684">Browser erkennen eine PWA automatisch und fordern den Benutzer zur Installation auf, aber Sie kÃ¶nnen auch manuell eine Aufforderung auslÃ¶sen.</p>
<p data-start="2686" data-end="2741">ðŸ“Œ <strong data-start="2689" data-end="2741">HÃ¶ren Sie auf das <code data-start="2709" data-end="2730">beforeinstallprompt</code>-Ereignis</strong></p>
<pre class="!overflow-visible" data-start="2742" data-end="3387"><div class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre language-javascript"><span><span class="hljs-keyword">let</span> deferredPrompt;

<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">'beforeinstallprompt'</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
  event.<span class="hljs-title function_">preventDefault</span>();
  deferredPrompt = event;

  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"install-button"</span>).<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">"block"</span>;

  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"install-button"</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"click"</span>, <span class="hljs-function">() =&gt;</span> {
    deferredPrompt.<span class="hljs-title function_">prompt</span>();
    deferredPrompt.<span class="hljs-property">userChoice</span>.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">choiceResult</span> =&gt;</span> {
      <span class="hljs-keyword">if</span> (choiceResult.<span class="hljs-property">outcome</span> === <span class="hljs-string">'accepted'</span>) {
        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">'Benutzer hat die Installation der PWA akzeptiert'</span>);
      } <span class="hljs-keyword">else</span> {
        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">'Benutzer hat die Installation der PWA abgelehnt'</span>);
      }
      deferredPrompt = <span class="hljs-literal">null</span>;
    });
  });
});
</span></code></div></pre>
<p data-start="3389" data-end="3452">ðŸ“Œ <strong data-start="3392" data-end="3450">FÃ¼gen Sie eine Installations-SchaltflÃ¤che hinzu (HTML)</strong></p>
<pre class="!overflow-visible" data-start="3453" data-end="3541"><div class="overflow-y-auto p-4" dir="ltr"><code class="!whitespace-pre language-html"><span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"install-button"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display: none;"</span>&gt;</span>PWA installieren<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
</span></code></div></pre>
<h4 data-start="3543" data-end="3600">5. Testen Sie, ob die PWA ordnungsgemÃ¤ÃŸ funktioniert</h4>
<p data-start="3601" data-end="3641">ðŸ“Œ <strong data-start="3604" data-end="3641">Testen Sie in den Chrome DevTools</strong></p>
<ol data-start="3642" data-end="4070">
<li data-start="3642" data-end="3707">Ã–ffnen Sie die Chrome-Entwicklertools (F12 oder Strg+Shift+I).</li>
<li data-start="3708" data-end="3745">Gehen Sie zum <strong data-start="3725" data-end="3740">Application</strong>-Tab.</li>
<li data-start="3746" data-end="3839">ÃœberprÃ¼fen Sie, ob <code data-start="3768" data-end="3783">manifest.json</code> korrekt unter dem Abschnitt <strong data-start="3812" data-end="3824">Manifest</strong> geladen wurde.</li>
<li data-start="3840" data-end="3948">ÃœberprÃ¼fen Sie, ob <code data-start="3862" data-end="3881">service-worker.js</code> korrekt unter dem Abschnitt <strong data-start="3910" data-end="3929">Service Workers</strong> registriert wurde.</li>
<li data-start="3949" data-end="4070">Trennen Sie die Netzwerkverbindung und versuchen Sie, die Seite neu zu laden, um die Offline-FunktionalitÃ¤t zu testen.</li>
</ol>
<h3 data-start="4072" data-end="4091">Zusammenfassung</h3>
<p data-start="4092" data-end="4409" data-is-last-node="" data-is-only-node="">âœ… FÃ¼gen Sie <code data-start="4104" data-end="4119">manifest.json</code> hinzu, um die PWA zu definieren<br data-start="4151" data-end="4154">
âœ… Registrieren Sie <code data-start="4173" data-end="4192">service-worker.js</code> fÃ¼r die Offline-UnterstÃ¼tzung<br data-start="4222" data-end="4225">
âœ… Stellen Sie sicher, dass die Website Ã¼ber HTTPS bereitgestellt wird<br data-start="4294" data-end="4297">
âœ… Implementieren Sie den "Zum Home-Bildschirm hinzufÃ¼gen"-Hinweis<br data-start="4362" data-end="4365">
âœ… Testen Sie die PWA mit den Chrome DevTools</p></div></div></div>